# test-config.yaml file.

# --- Includes ------------------------------------------------------------
# This optional section allows to include other configuration files to
# incorporate their property values into properties of this file.
# -------------------------------------------------------------------------
includes:
  # --- Common properties ---------------------------------------------------
  # path   (required): Specifies the path to the external configuration file.
  # as     (required): Specifies how the file will be referenced in value
  #                    substitutions (e.g., ${ti.myIncludedString}).
  # ignore (optional): If true, the section gets ignored.
  # -------------------------------------------------------------------------
  - path: test-include.yaml
    as: ti

# --- Distributors --------------------------------------------------------
# This optional section allows to create distributors to distribute the
# generated files to differnt locations. Some distributors might need
# additional attributes to function properly. Those properties must be
# described in the corresponding distributor plugin and are not covered
# here.
# -------------------------------------------------------------------------
distributors:
  # --- Common properties (valid for all distributors) ----------------------
  # distributor (required): Specifies the distributor plugin to use. If the
  #                         plugin starts with 'ninja-bear-plugin-' it's
  #                         possible to just use the distributor name (e.g.
  #                         git) as it will internally be prefixed to result
  #                         in 'ninja-bear-distributor-git'.
  # as          (required): Specifies how the distributor will be referenced
  #                         at the language level.
  # ignore      (optional): If true, the section gets ignored.
  # -------------------------------------------------------------------------
  - distributor: ninja-bear-distributor-exampledistributor  # Specifies which distributor plugin to use.
    as: example-distributor

# --- Transformers --------------------------------------------------------
# This optional section allows to specify transformer-scripts to transform
# property values before being dumped.
# -------------------------------------------------------------------------
transformers:
  # --- Common properties ---------------------------------------------------
  # transformer (required): Specifies a Python script to transform the currently
  #                         processed property. To reflect changes to the outside
  #                         of the script, the value variable must be modified.
  #                         The script has access to the following variables:
  #
  #                         name: Property name.
  #                         value: Property value.
  #                         type: Property type.
  #                         properties: List of all properties (must not be modified).
  #
  # as          (required): Specifies how the distributor will be referenced at
  #                         the language level.
  # ignore      (optional): If true, the section gets ignored.
  # -------------------------------------------------------------------------
  - transformer: |  # If the property 'myString' is being processed, replace the value by 'Hello Mars'.
      if name == 'myString':
        value = 'Hello Mars'

    as: example-transformer

# --- Languages -----------------------------------------------------------
# This optional section defines for which languages to generate files. It is
# optional because configuration files might just define properties, that
# are imported into other configuration files. Some languages might need
# additional attributes to function properly. Those properties must be
# described in the corresponding languages plugin and are not covered
# here.
# -------------------------------------------------------------------------
languages:
  # --- Common properties (valid for all languages) -------------------------
  # language        (required): Specifies the language plugin to use. If the
  #                             plugin starts with 'ninja-bear-language-' it's
  #                             possible to just use the language name (e.g.
  #                             typescript) as it will internally be prefixed
  #                             to result in 'ninja-bear-language-typescript'.
  # file_naming     (optional): Specifies the file naming convention (snake |
  #                             screaming-snake | camel | pascal | kebap).
  #                             Defaults to the file-name without the extension.
  # property_naming (optional): Specifies the property naming convention (snake |
  #                             screaming-snake | camel | pascal | kebap).
  # type_naming     (optional): Specifies the naming convention for the generated
  #                             type (snake | screaming-snake | camel | pascal |
  #                             kebap). The default value is language specific.
  # indent          (optional): Specifies the amount of spaces before each
  #                             property. Defaults to 4.
  # transformers    (optional): Specifies a list of transformers (alias) to use.
  # distributors    (optional): Specifies a list of distributors (alias) to use.
  # ignore          (optional): If true, the section gets ignored.
  # -------------------------------------------------------------------------
  - language: ninja-bear-language-examplescript
    file_naming: pascal
    property_naming: camel
    type_naming: pascal
    indent: 4

    transformers:
      - example-transformer

    distributors:
      - example-distributor


# --- Properties ----------------------------------------------------------
# This mandatory section defines the actual properties.
# -------------------------------------------------------------------------
properties:
  # -------------------------------------------------------------------------
  # type    (required): Specifies the constant data type (bool | int | float |
  #                     double | string | regex).
  # name    (required): Specifies the constant's name.
  # value   (required): Specifies the constant's value.
  #
  # comment (optional): Adds an extra comment to the constant.
  # hidden  (optional): Constants serves as helper and will not be written to
  #                     the final result.
  # ignore  (optional): If true, the section gets ignored.
  # -------------------------------------------------------------------------
  - type: bool
    name: myBoolean
    value: true

  - type: int
    name: myInteger
    value: 142

  - type: float
    name: myFloat
    value: 322f  # Float with float specifier. However, an additional specifier (f) is not required and will be trimmed.

  - type: float
    name: myCombinedFloat
    value: ${myInteger} * ${myFloat}  # Number and boolean combinations get evaluated during the dump process.

  - type: double
    name: myDouble
    value: 233.9

  - type: string
    name: myString
    value: Hello World
    hidden: true  # If a property should act as a helper but should not be written to the generated file, it must be marked as 'hidden'.

  - type: regex
    name: myRegex
    value: Test Reg(E|e)x
    comment: Just another RegEx.  # Variables can be described using the comment property.

  - type: string
    name: mySubstitutedString
    value: Sometimes I just want to scream ${myString}!  # To use the value of another property, simply use its name with ${}. E.g., ${myString}.

  - type: string
    name: myCombinedString
    value: I am telling you that ${ti.myIncludedString}.  # To use the value of another property from an included file, simply use the file's
                                                          # alias and the corresponding property name. E.g., ${ti.myIncludedString}.

# --- Meta data -----------------------------------------------------------
# This optional section defines which meta data to add as comments to the
# generated config files.
# -------------------------------------------------------------------------
meta:
  # -------------------------------------------------------------------------
  # user    (optional): Include the user.
  # date    (optional): Include the date.
  # time    (optional): Include the time.
  # version (optional): Include the used ninja-bear version.
  # link    (optional): Include the link to ninja-bear.
  # -------------------------------------------------------------------------
  user: true
  date: true
  time: true
  version: true
  link: true
